<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="wwwroot\static\**" />
    <Content Remove="wwwroot\static\**" />
    <EmbeddedResource Remove="wwwroot\static\**" />
    <None Remove="wwwroot\static\**" />
  </ItemGroup>

  <ItemGroup>
    <Content Remove="wwwroot\asset-manifest.json" />
    <Content Remove="wwwroot\favicon.ico" />
    <Content Remove="wwwroot\index.html" />
    <Content Remove="wwwroot\manifest.json" />
    <Content Remove="wwwroot\service-worker.js" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Hangfire" Version="1.6.20" />
    <PackageReference Include="Hangfire.Console" Version="1.4.1" />
    <PackageReference Include="Hangfire.Mongo" Version="0.5.10" />
    <PackageReference Include="Microsoft.AspNetCore.All" Version="2.0.5" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.0.4" />
    <PackageReference Include="MongoDB.Driver" Version="2.7.0" />
    <PackageReference Include="Redouble.AspNet.Webpack" Version="2.3.0" />
    <PackageReference Include="System.Net.Torrent" Version="0.3.0" />
  </ItemGroup>

  <ItemGroup>
    <DotNetCliToolReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Tools" Version="2.0.2" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\TPBAPI.api\TPBAPI.api.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="System.Web">
      <HintPath>..\..\..\..\..\..\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.7\System.Web.dll</HintPath>
    </Reference>
  </ItemGroup>

  <ItemGroup>
    <Folder Include="wwwroot\" />
  </ItemGroup>

  <!--<Target Name="DebugRunWebpack" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('wwwroot\dist') ">-->
  <Target Name="DebugRunWebpack" BeforeTargets="Build"  Condition=" '$(Configuration)' == 'Debug' And !Exists('wwwroot\static') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />

    <!-- In development, the dist files won't exist on the first run or when cloning to
         a different machine, so rebuild them if not already present. -->
    <Message Importance="high" Text="Performing frontend build..." />
    <!--<Exec Command="webpack -config webpack.config.vendor.js" />-->
    <Exec Command="npm run build " />

  </Target>


  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec Command="npm install" />
    <!--<Exec Command="webpack -config webpack.config.vendor.js -env.prod" />-->
    <Exec Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="wwwroot\dist\**; ClientApp\dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
